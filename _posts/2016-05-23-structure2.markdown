---
layout:     post
title:      "基础数据结构（二）"
subtitle:   "哈希表、树、图"
date:       2016-05-23
author:     "luobu"
header-img: "img/post.jpg"
catalog:    true
tags:
    - structure
---

### 二叉树

每个结点的度都不大于2，每个结点的孩子结点次序不能颠倒，这样的树称之为二叉树。下面是关于二叉树的一些性质：

- 在二叉树的第 n 层至多有 2ⁿ⁻¹ 个结点；

- 深度为 n 的二叉树至多有 2ⁿ-1 个结点；

- 对于一颗二叉树，若终端结点的数量为n₀，度为2的结点数量为n₂，则n₀ = n₂ + 1。

当然根据二叉树的特性，还可以总结出很多其他相关的性质或者规律，就没有一一列举了。

二叉树的存储可以有顺序和链式的结构。顺序结构即用数组来存储元素，对于完全二叉树比较方便，但对于一般的二叉树来说就比较浪费资源了。下面主要介绍的都是基于链式存储结构的二叉树。


``` c
typedef struct node
{
    int data;
    struct node *lchild;
    struct node *rchild;
} tree;
```


#### 二叉树遍历



### 二叉树相关排序

#### 二叉排序树

#### 平衡二叉排序树



#### B树




### 哈夫曼树

#### 哈夫曼编码

### 图



#### 存储结构


#### 图的遍历


#### 应用


